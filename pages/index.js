import Head from "next/head";
import Image from "next/image";
import dynamic from "next/dynamic";
import styles from "../styles/Home.module.css";
import Logo from "../components/Logo";
import NavBar from "../components/NavBar";
import Footer from "../components/Footer";
import useOnScreen from "../utils/useOnScreen";
import { useState, useMemo, useEffect, useRef } from "react";
import throttle from "lodash.throttle";

const CreationPad = dynamic(() => import("../components/CreactionPad"), {
  ssr: false,
});
Array.prototype.dup = function (n) {
  const arr = this;
  return (function f(n) {
    return n === 1 ? arr : [...arr, ...f(n - 1)];
  })(n);
};

let creationsArr = [
  { title: "Deep earth" },
  { title: "Night arcade" },
  { title: "Soccer team VR" },
  { title: "The grid" },
  { title: "From up above VR" },
  { title: "Pocket borealis" },
  { title: "The curiosity" },
  { title: "Make it fisheye" },
].dup(3);
const getItemsNum = (windowWidth) => {

  if (windowWidth > 1150) {
    return 4;
  }
  if (windowWidth > 820) {
    return 3;
  }
  if (windowWidth > 600) {
    return 2;
  }
  if (windowWidth <= 600) {
    return 1;
  }
}
export default function Home() {
  const [windowWidth, setWindowWidth] = useState();
  const [itemsNumLoad, setItemsNumLoad] = useState();
  const [creations, setCreations] = useState();
  const bottomCreations = useRef();
  const creationbottomRefValue = useOnScreen(bottomCreations);

  useEffect(() => {
    if (creations == null || creations === creationsArr.length) return;
    if (creationbottomRefValue) {


      setCreations((creations) => {
        const creationLen = creations.length;
        return [
          ...creations,
          ...creationsArr.slice(creationLen, creationLen + itemsNumLoad),
        ]
      });
    }

  }, [creationbottomRefValue]);

  useEffect(() => {
    setWindowWidth(window?.innerWidth);

  }, []);

  useEffect(() => {
    setItemsNumLoad(getItemsNum(windowWidth));
  }, [windowWidth]);

  useEffect(() => {
    if (!windowWidth) return;
    if (creations && creations.length > 0) return;
    setCreations(creationsArr.slice(0, itemsNumLoad));
    if (creationbottomRefValue) {
      setCreations((creations) => {
        const creationLen = creations.length;
        return [
          ...creations,
          ...creationsArr.slice(creationLen, creationLen + itemsNumLoad + 1),
        ]
      });
    }
  }, [itemsNumLoad])

  const handleResize = () => {
    setWindowWidth(window?.innerWidth);
  };

  const throttleResizeHandler = useMemo(() => throttle(handleResize, 300));

  useEffect(() => {
    window.addEventListener("resize", throttleResizeHandler);
    return function cleanup() {
      throttleResizeHandler?.cancel();
      window.removeEventListener("resize", throttleResizeHandler);
    };
  });



  return (
    <div className={styles.container}>
      <Head>
        <title>Loopstudios landing page</title>
        <meta name="description" content="Generated by create next app" />
        <link
          rel="icon"
          type="image/png"
          sizes="32x32"
          href="./images/favicon-32x32.png"
        />
      </Head>
      <header className={styles.header}>
        <NavBar />
        <div>
          <h1 className={styles.hero}>IMMERSIVE EXPERIENCES THAT DELIVER</h1>
        </div>
      </header>
      <section className={styles.leaderSection}>
        <div className={styles.interactiveDiv}></div>
        <div className={styles.leaderDiv}>
          <h2 className={styles.leaderDivTitle}>
            THE LEADER IN INTERACTIVE VR
          </h2>
          <p className={styles.leaderDivText}>
            Founded in 2011, Loopstudios has been producing world-class virtual
            reality projects for some of the best companies around the globe.
            Our award-winning creations have transformed businesses through
            digital experiences that bind to their brand.
          </p>
        </div>
      </section>
      <section className={styles.creationsSection}>
        <div className={styles.creactionsTitleAndButton}>
          <h2 className={styles.creationsTitle}>OUR CREATIONS</h2>

          <button className={styles.seeAllButton}>SEE ALL</button>
        </div>
        <div className={styles.creactionsDiv}>
          {creations?.map((i, index) => (
            <CreationPad key={i.title + index} {...i} windowWidth={windowWidth} />
          ))}
        </div>
        <button className={styles.seeAllButton2}>SEE ALL</button>
      </section>
      <div ref={bottomCreations}></div>
      <Footer />
      <div className="attribution">
        Challenge by{" "}
        <a
          href="https://www.frontendmentor.io?ref=challenge"
          target="_blank"
          rel="noreferrer"
        >
          Frontend Mentor
        </a>
        . Coded by{" "}
        <a href="https://adelinked.netlify.app" rel="noreferrer">
          Adelinked
        </a>
        .
      </div>
    </div>
  );
}
